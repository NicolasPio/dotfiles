" Color
set background=light
colorscheme solarized

set nocompatible

" Leader key
let mapleader = "\<Space>"

" Clipboard share with the system
set clipboard=unnamed

" Remove gvim menu
if has("gui_running")
	set guioptions-=m
	set guioptions-=r
	set guioptions-=T
	set transparency=0
	set guifont=Hack:h14.5
endif

" Column
set colorcolumn=80
autocmd FileType * setlocal colorcolumn=+1
autocmd FileType nerdtree setlocal colorcolumn=""

set relativenumber
" set nonumber
set noshowmode

" Nerdtree
" =============================================================================
let g:NERDTreeWinSize = 30
map <Leader>n :NERDTreeToggle<CR>

" CtrlP
" =============================================================================
let g:ctrlp_map = '<leader>o'

" Easymotion
" =============================================================================
" Jump to anywhere you want with minimal keystrokes, with just one key binding.
" `s{char}{label}`
nmap s <Plug>(easymotion-overwin-f2)
" - Search
map  <Leader><SPACE> <Plug>(easymotion-sn)
omap <Leader><SPACE> <Plug>(easymotion-tn)

" These `n` & `N` mappings are options. You do not have to map `n` & `N` to EasyMotion.
" Without these mappings, `n` & `N` works fine. (These mappings just provide
" different highlight method and have some other features )
map  n <Plug>(easymotion-next)
map  N <Plug>(easymotion-prev)

" JK motions: Line motions
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
"
" End Easymotion

" vim-table-mode
let g:table_mode_corner="|"

" NeoComplete auto run
let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1

" Enable omni completion.
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS

" Enable heavy omni completion.
if !exists('g:neocomplete#sources#omni#input_patterns')
  let g:neocomplete#sources#omni#input_patterns = {}
endif

let g:neocomplete#sources#omni#input_patterns.php = '[^. \t]->\h\w*\|\h\w*::'

inoremap <expr><C-g>     neocomplete#undo_completion()
inoremap <expr><C-l>     neocomplete#complete_common_string()

" Plugin key-mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" Snippets
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

let g:neosnippet#snippets_directory='~/.vim/bundle/vim-snippets/snippets'

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif

" End neosnippet

set lazyredraw
set cursorline
set ttyfast
set synmaxcol=128

" Remove buffer top bar
let g:airline#extensions#tabline#enabled = 0
let g:airline_theme = 'solarized'

" Startify
" =============================================================================
let g:startify_list_order = [ ['Sessions'], 'sessions', ['Bookmarks'], 'bookmarks', ['Recent files'], 'files']
let g:startify_bookmarks = ['~/.vimrc.local', '~/web/html/cybercook/','~/web/html/crm', '~/web/html/cybercook-old/']
let g:startify_session_autoload = 0
let g:startify_change_to_vcs_root = 1
let g:startify_change_to_dir = 1
let g:startify_custom_header = []

let g:session_autoload = 0

" Fix session color broken
set sessionoptions=blank,curdir,folds,help,tabpages,winpos
